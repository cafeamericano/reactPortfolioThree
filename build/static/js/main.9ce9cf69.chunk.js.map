{"version":3,"sources":["components/Fetcher.js","components/AboutMe.js","components/Applications.js","components/Connect.js","components/Main.js","components/Header.js","App.js","index.js"],"names":["Fetcher","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearch","user","fetch","then","response","json","results","console","log","length","setState","gatheredDbDocs","react_default","a","createElement","onClick","cumulativeClicker","class","Component","AboutMe","state","visible","visibility","selfClickCounter","content","headerText","paragraphOne","paragraphTwo","tallySelfClicks","bind","assertThisInitialized","x","className","id","appThumbnailStyle","height","Applications","drawCards","argObj","title","src","imagePath","style","href","githubLink","deployedLink","data","items","map","connectBlocksJSON","icon","text","Connect","drawConnectBlocks","connectBlocks","connectBlocksToShow","Main","totalClicks","subComponentVisibilityToggler","tallyCumulativeClicks","toggleVisibilityForAll","total","role","components_Fetcher","components_AboutMe","components_Applications","components_Connect","Header","App","components_Header","components_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ce9cf69.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Fetcher extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.handleSearch();\n  }\n\n  handleSearch = user => {\n    let url = \"/hit-db\";\n    fetch(url)\n      .then(response => response.json())\n      .then(results => {\n        console.log(results);\n        console.log(results.length);\n        this.setState({\n          gatheredDbDocs: results\n        });\n      });\n  };\n\n  render() {\n    return (\n      /////////////////////////////////////////////////////////////////////////////////\n      /////////////////////////////////////////////////////////////////////////////////\n      <section onClick={this.props.cumulativeClicker} class=\"card mb-4 p-3\">\n        My state holds items fetched from the database!\n      </section>\n      /////////////////////////////////////////////////////////////////////////////////\n      /////////////////////////////////////////////////////////////////////////////////\n    );\n  }\n}\n\nexport default Fetcher;\n","import React, { Component } from \"react\";\n\nclass AboutMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: this.props.visibility,\n      selfClickCounter: 0,\n      content: {\n        headerText: \"Meet Matthew Farmer.\",\n        paragraphOne:\n          \"I'm a full-stack web developer with a keen eye for design and a passion for developing applications to solve real-world problems. In addition to more than a year of experience with programming on both the front and back end, I possess more than five years of professional experience with creative problem solving (such as creating departmental knowledge repositories with search capability and writing code to determine refund amounts for thousands of accounts at a large bank).\",\n        paragraphTwo:\n          \"My higher education includes a Bachelorâ€™s Degree in Business Management as well as the (pending) completion of the UNC Chapel Hill Coding Bootcamp. Technical skills include HTML/CSS, JavaScript, NodeJS, ReactJS, and database manipulation. Certified by the American Society of Quality in process improvement, I am highly skilled with process flowcharting (an invaluable tool in application development). In a collaborative environment, I enjoy teaching others and sharing my knowledge for the benefit of the team.\"\n      }\n    };\n    this.tallySelfClicks = this.tallySelfClicks.bind(this);\n  }\n\n  tallySelfClicks() {\n    var x = this.state.selfClickCounter;\n    this.setState({ selfClickCounter: x + 1 });\n  }\n\n  componentDidUpdate() {\n    //Allows state to change when prop is updated by parent\n    let x = this.props.visibility;\n    if (x !== this.state.visible) {\n      this.setState({ visible: x });\n    }\n  }\n\n  render() {\n    if (this.state.visible) {\n      return (\n        /////////////////////////////////////////////////////////////////////////////////\n        /////////////////////////////////////////////////////////////////////////////////\n        <section onClick={this.props.cumulativeClicker} class=\"card mb-4\">\n          <subsection onClick={this.tallySelfClicks}>\n            <div className=\"card-header text-right\">\n              <span class=\"badge badge-primary\">\n                {this.state.selfClickCounter}\n              </span>\n            </div>\n            <div className=\"card-body\">\n              <h3 class=\"mb-4\">\n                {this.state.content.headerText}\n              </h3>\n              <p>{this.state.content.paragraphOne}</p>\n              <p id=\"extraAboutText\">\n                {this.state.content.paragraphTwo}\n              </p>\n            </div>\n          </subsection>\n        </section>\n        /////////////////////////////////////////////////////////////////////////////////\n        /////////////////////////////////////////////////////////////////////////////////\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default AboutMe;\n","import React, { Component } from \"react\";\n\nvar appThumbnailStyle = {\n  height: \"200px\"\n};\n\nclass Applications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: this.props.visibility,\n      selfClickCounter: 0,\n      gatheredDbDocs: {\n        data: []\n      }\n    };\n    this.tallySelfClicks = this.tallySelfClicks.bind(this);\n  }\n\n  tallySelfClicks() {\n    var x = this.state.selfClickCounter;\n    this.setState({ selfClickCounter: x + 1 });\n  }\n\n  componentDidUpdate() {\n    //Allows state to change when prop is updated by parent\n    let x = this.props.visibility;\n    if (x !== this.state.visible) {\n      this.setState({ visible: x });\n    }\n  }\n\n  componentWillMount() {\n    this.handleSearch();\n  }\n\n  handleSearch = user => {\n    let url = \"/hit-db\";\n    fetch(url)\n      .then(response => response.json())\n      .then(results => {\n        console.log(results);\n        console.log(results.length);\n        this.setState({\n          gatheredDbDocs: results\n        });\n      });\n  };\n\n  drawCards = argObj => (\n    <div className=\"col-xl-4 col-md-6\">\n      <div className=\"card shadow mb-3\">\n        <h5 className=\"p-3\">{argObj.title}</h5>\n        <img src={argObj.imagePath} style={appThumbnailStyle} />\n        <div className=\"card-footer text-right\">\n          <a href={argObj.githubLink}>\n            <i class=\"fab fa-github\"></i>\n          </a>\n          <span> | </span>\n          <a href={argObj.deployedLink}>\n            <i class=\"fas fa-external-link-alt\"></i>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n\n  render() {\n    // if (this.state.visible) {\n    if (this.state.gatheredDbDocs.data.length !== 0) {\n      var items = this.state.gatheredDbDocs.data\n      return (\n        /////////////////////////////////////////////////////////////////////////////////\n        /////////////////////////////////////////////////////////////////////////////////\n        <section onClick={this.props.cumulativeClicker} class=\"card mb-4\">\n          <subsection onClick={this.tallySelfClicks}>\n            <div className=\"card-header text-right\">\n              <span class=\"badge badge-primary\">\n                {this.state.selfClickCounter}\n              </span>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">{items.map(this.drawCards)}</div>\n            </div>\n          </subsection>\n        </section>\n        /////////////////////////////////////////////////////////////////////////////////\n        /////////////////////////////////////////////////////////////////////////////////\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Applications;\n","import React, { Component } from \"react\";\n\nconst connectBlocksJSON = [\n  {\n    title: \"RÃ©sumÃ©\",\n    icon: \"fas fa-file-invoice fa-5x\",\n    href:\n      \"https://drive.google.com/uc?export=download&id=1HOcFhOlveROqNYVoJIyTxzg6UWnjzxaY\"\n  },\n  {\n    title: \"GitHub\",\n    icon: \"fab fa-github fa-5x\",\n    href: \"https://github.com/cafeamericano\"\n  },\n  {\n    title: \"LinkedIn\",\n    icon: \"fab fa-linkedin fa-5x\",\n    href: \"https://www.linkedin.com/in/matthew-farmer-204930182\"\n  },\n  {\n    title: \"Email\",\n    icon: \"fas fa-envelope fa-5x\",\n    href: \"#\",\n    text: \"mfarmer5102@gmail.com\"\n  },\n  {\n    title: \"Phone\",\n    icon: \"fas fa-phone fa-5x\",\n    href: \"#\",\n    text: \"252-289-2937\"\n  }\n];\n\nclass Connect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: this.props.visibility,\n      selfClickCounter: 0,\n      connectBlocks: connectBlocksJSON\n    };\n    this.tallySelfClicks = this.tallySelfClicks.bind(this);\n  }\n\n  tallySelfClicks() {\n    var x = this.state.selfClickCounter;\n    this.setState({ selfClickCounter: x + 1 });\n  }\n\n  componentDidUpdate() {\n    //Allows state to change when prop is updated by parent\n    let x = this.props.visibility;\n    if (x !== this.state.visible) {\n      this.setState({ visible: x });\n    }\n  }\n\n  drawConnectBlocks = argObj => (\n    <div className=\"col-xl-4 col-lg-4 col-xs-6\">\n      <div className=\"card shadow mb-3 text-center\">\n        <div className=\"p-3\">\n          <h5>{argObj.title}</h5>\n        </div>\n        <div className=\"p-3\">\n          <a href={argObj.href}>\n            <i class={argObj.icon}></i>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n\n  render() {\n    const connectBlocksToShow = this.state.connectBlocks;\n    if (this.state.visible) {\n      return (\n        /////////////////////////////////////////////////////////////////////////////////\n        /////////////////////////////////////////////////////////////////////////////////\n        <section onClick={this.props.cumulativeClicker} class=\"card mb-4\">\n          <subsection onClick={this.tallySelfClicks}>\n            <div className=\"card-header text-right\">\n              <span class=\"badge badge-primary\">\n                {this.state.selfClickCounter}\n              </span>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                {connectBlocksToShow.map(this.drawConnectBlocks)}\n              </div>\n            </div>\n          </subsection>\n        </section>\n        /////////////////////////////////////////////////////////////////////////////////\n        /////////////////////////////////////////////////////////////////////////////////\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Connect;\n","//IMPORTS=========================================================================================================================================================\n\nimport React, { Component } from \"react\";\n\n//Child components\nimport Fetcher from \"./Fetcher\";\nimport AboutMe from \"./AboutMe\";\nimport Applications from \"./Applications\";\nimport Connect from \"./Connect\";\n\n//STYLING=========================================================================================================================================================\n\n//NAME, STATE, AND BINDING=========================================================================================================================================================\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalClicks: 0,\n      subComponentVisibilityToggler: {\n        AboutMe: true,\n        Applications: true,\n        Connect: true\n      }\n    };\n    this.tallyCumulativeClicks = this.tallyCumulativeClicks.bind(this);\n    this.toggleVisibilityForAll = this.toggleVisibilityForAll.bind(this);\n  }\n\n  //LIFECYCLE METHODS=========================================================================================================================================================\n\n  //SELF METHODS=========================================================================================================================================================\n\n  //When tallyCumulativeClicks is called, do the following\n  tallyCumulativeClicks() {\n    const total = this.state.totalClicks;\n    this.setState({ totalClicks: total + 1 });\n  }\n\n  toggleVisibilityForAll() {\n    if (this.state.subComponentVisibilityToggler.AboutMe) {\n      this.setState({\n        subComponentVisibilityToggler: {\n          AboutMe: false,\n          Applications: false,\n          Connect: false\n        }\n      });\n    } else {\n      this.setState({\n        subComponentVisibilityToggler: {\n          AboutMe: true,\n          Applications: true,\n          Connect: true\n        }\n      });\n    }\n  }\n\n  //RENDER=========================================================================================================================================================\n\n  render() {\n    return (\n      <div className=\"p-3\">\n        <div onClick={this.toggleVisibilityForAll} class=\"text-right mb-3\">\n          <i class=\"fas fa-eye-slash fa-2x\"></i>\n        </div>\n        <div class=\"alert alert-secondary\" role=\"alert\">\n          Total Clicks Across All Components: {this.state.totalClicks}\n        </div>\n        <Fetcher></Fetcher>\n        <AboutMe\n          visibility={this.state.subComponentVisibilityToggler.AboutMe}\n          cumulativeClicker={this.tallyCumulativeClicks}\n        ></AboutMe>\n        <Applications\n          visibility={this.state.subComponentVisibilityToggler.Applications}\n          cumulativeClicker={this.tallyCumulativeClicks}\n        ></Applications>\n        <Connect\n          visibility={this.state.subComponentVisibilityToggler.Connect}\n          cumulativeClicker={this.tallyCumulativeClicks}\n        ></Connect>\n      </div>\n    );\n  }\n}\n\n//Export class AllEntriesList to be used by App.js\nexport default Main;\n","import React, { Component } from \"react\";\n\nconst headerStyle = {\n  background: \"#e8b6a2\",\n  color: \"black\",\n  fontFamily: \"monoton\",\n  fontSize: \"50px\",\n  padding: \"10px\"\n};\n\nclass Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark text-center\">\n        <span className=\"navbar-brand mb-0 h1\">\n          <i className=\"fab fa-react\"></i>\n          <span> Portfolio</span>\n        </span>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Main from \"./components/Main.js\";\nimport Header from \"./components/Header\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"bg-light\">\n        <Header />\n        <div className=\"container animated fadeInUpBig\">\n          <Main />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}